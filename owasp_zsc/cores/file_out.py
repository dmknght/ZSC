"""
OWASP ZSC
https://www.owasp.org/index.php/OWASP_ZSC_Tool_Project
https://github.com/zscproject/OWASP-ZSC
http://api.z3r0d4y.com/
https://groups.google.com/d/forum/owasp-zsc [ owasp_zsc[at]googlegroups[dot]com ]
"""
from owasp_zsc.cores.alert import *


def file_output(target, func, data, os, encode, shellcode, shellcode_op):
    args = ""
    if data == '':
        args = "'True'"
    else:
        for value in data:
            if value != '':
                args += "'" + value + "',"
        args = args[:-1]
    fileout = open(target, 'w')

    data_file_out = "#include <stdio.h>\n"
    data_file_out += "#include <string.h>\n"
    data_file_out += "/*\n"
    data_file_out += "This shellcode generated by OWASP ZSC\n"
    data_file_out += "https://www.owasp.org/index.php/OWASP_ZSC_Tool_Project\n"
    data_file_out += "http://zsc.z3r0d4y.com/\n"
    data_file_out += "owasp_zsc[at]googlegroups[dot]com\n\n"
    data_file_out += f"Title: {func}({args})\n"
    data_file_out += f"OS: {os}\n"
    data_file_out += "\n"
    data_file_out += f"Encode: {encode}\n"
    data_file_out += f"Length: {str(len(shellcode_op) / 4)}\n"
    data_file_out += f"Assembly code:\n{shellcode}\n"
    data_file_out += f"compile example(osx_x86): gcc -m32  -o shellcode_compiled {target}\n"
    data_file_out += f"compile example(linux_x86): gcc -m32  -z execstack -o shellcode_compiled {target}\n"
    data_file_out += f"compile example(windows_x86): gcc -o shellcode_compiled.exe {target}\n"
    data_file_out += "followed by(to run): ./shellcode_compiled or shellcode_compiled.exe\n"
    data_file_out += "*/\n\n"
    data_file_out += f"char *shellcode = \"{shellcode_op}\";"
    data_file_out += "int main(void) { \n"
    data_file_out += "  (*(void(*)()) shellcode)();\n"
    data_file_out += "    return 0;\n}"
    fileout.write(data_file_out)
    fileout.close()
    info(f'File saved as {target} .\n')


def downloaded_file_output(target, data):
    fileout = open(target, 'w')
    fileout.write(data)
    fileout.close()
    info(f'File saved as {target} .\n')
